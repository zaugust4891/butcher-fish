"""added is_active soft_delete to Market. Added unique constraints to prevent duplicates. Rating range check constraints. ondelete=CASCADE 

Revision ID: fb210bbe46f5
Revises: e319e55509da
Create Date: 2025-06-07 22:21:23.175018

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fb210bbe46f5'
down_revision = 'e319e55509da'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('market_accounts', schema=None) as batch_op:
        batch_op.alter_column('market_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('market_accounts_market_id_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_market_accounts_market_id'), ['market_id'], unique=True)
        batch_op.drop_constraint(batch_op.f('market_accounts_market_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'markets', ['market_id'], ['market_id'], ondelete='CASCADE')

    with op.batch_alter_table('markets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False))
        batch_op.add_column(sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
        batch_op.alter_column('address',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.create_index('uix_market_addr_active', ['name', 'address'], unique=True, postgresql_where=sa.text('is_active = TRUE'))

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.alter_column('market_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_menu_items_market_id'), ['market_id'], unique=False)
        batch_op.drop_constraint(batch_op.f('menu_items_market_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'markets', ['market_id'], ['market_id'], ondelete='CASCADE')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('market_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_reviews_market_id'), ['market_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reviews_user_id'), ['user_id'], unique=False)
        batch_op.drop_constraint(batch_op.f('reviews_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('reviews_market_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'markets', ['market_id'], ['market_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('reviews_market_id_fkey'), 'markets', ['market_id'], ['market_id'])
        batch_op.create_foreign_key(batch_op.f('reviews_user_id_fkey'), 'users', ['user_id'], ['user_id'])
        batch_op.drop_index(batch_op.f('ix_reviews_user_id'))
        batch_op.drop_index(batch_op.f('ix_reviews_market_id'))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('market_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('menu_items_market_id_fkey'), 'markets', ['market_id'], ['market_id'])
        batch_op.drop_index(batch_op.f('ix_menu_items_market_id'))
        batch_op.alter_column('market_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('markets', schema=None) as batch_op:
        batch_op.drop_index('uix_market_addr_active', postgresql_where=sa.text('is_active = TRUE'))
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('deleted_at')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('market_accounts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('market_accounts_market_id_fkey'), 'markets', ['market_id'], ['market_id'])
        batch_op.drop_index(batch_op.f('ix_market_accounts_market_id'))
        batch_op.create_unique_constraint(batch_op.f('market_accounts_market_id_key'), ['market_id'])
        batch_op.alter_column('market_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
